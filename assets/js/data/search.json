[ { "title": "Bark 常见问题", "url": "/2021/06/barkfaq/", "categories": "Bark", "tags": "Bark", "date": "2021-06-18 12:02:57 +0800", "snippet": "For English如你的问题未找到解决方法，可在 Bark 问题反馈TG群 或者 Github Issues 反馈。 时效性通知无效 可以尝试重启设备来解决。 无法保存通知历史，或下拉推送没有点击复制按钮无法复制 可以尝试重启设备来解决。因某些原因导致推送服务扩展（UNNotificationServiceExtension）未能正常运行，执行通知保存的代码未能正常执行。 自动复制推送失效 iOS 14.5 之后的版本因权限收紧，不能在收到推送时自动复制推送内容到剪切板。可暂时先下拉推送或在锁屏界面左滑推送点查看即可自动复制，或..." }, { "title": "Bark服务端部署文档", "url": "/2018/06/bark-server-document/", "categories": "", "tags": "Bark", "date": "2018-06-26 16:59:59 +0800", "snippet": "For EnglishBark是啥？https://www.v2ex.com/t/467407使用教程隐私保护:如果你的数据特别敏感，请将Bark部署到私人服务器。所有的数据将只在 你的手机、你的服务器、Apple推送服务器之间传输。历史消息通过 NotificationServiceExtension 扩展，在收到推送时将推送信息保存在本地，不会经过其他任何设备。历史记录仅由个人iCloud私有库进行同步。可以确保你产生的任何通知，将只留在你的设备与你的iCloud中安装: Docker docker run -dt --name bark -p 8080:8080 -v `p..." }, { "title": "iOS Touch message 传递图解", "url": "/2016/10/ios-touch-message-chuan-di-tu-jie/", "categories": "", "tags": "", "date": "2016-10-20 15:20:39 +0800", "snippet": " 系统会通过hitTest的方法寻找响应链，完成之后会形成上图模型。 有了模型之后就会发生图上的三个步骤第一步：系统会将所有的 Touch message 优先发送给 关联在响应链上的全部手势。手势根据Touch序列消息和手势基本规则更改自己的状态（有的可能失败，有的可能识别等等）。如果没有一个手势对Touch message 进行拦截（拦截:系统不会将Touch message 发送给响应链顶部响应者)，系统会进入第二步第二步：系统将Touch message 发送给响应链 顶部的 视图控件，顶部视图控件这个时候就会调用Touch相关的四个方法中的某一个。之后进..." }, { "title": "Kingfisher 3 源码全解读笔记", "url": "/2016/10/kingfisher-3-yuan-ma-quan-jie-du-bi-ji/", "categories": "", "tags": "", "date": "2016-10-11 16:00:41 +0800", "snippet": "个人笔记，不适合阅读Kingfisher.swift泛型Base接受任何类型，实例化Kingfisher后将Base的实例保存在 base字段里，public final class Kingfisher&amp;lt;Base&amp;gt; { public let base: Base public init(_ base: Base) { self.base = base }}kf字段用于获取对象的 Kingfisher 实例对象，用来调用一些Kingfisher提供的功能。如果一个类需要使用 kf 字段，则只需要实现KingfisherCompa..." }, { "title": "V2ex iOS客户端 BUG &amp;amp; 建议", "url": "/2016/02/v2ex-ioske-hu-duan-bug-and-jian-yi/", "categories": "", "tags": "", "date": "2016-02-01 18:54:25 +0800", "snippet": "你可以给我写邮件或在当前页面评论处反馈问题、提出建议。邮箱：to@day.app 。评论：底部评论 (Disqus，需翻墙)下面列出一些常见的问题与答复1. 签到功能在哪在你刷新帖子列表时会判断需不需要签到，如果需要，则会自动签到，成功后会有一个提示。2. 是否会偷偷上传用户隐私数据当然是不会的，你可以用你的监控工具监控软件的网络请求。软件只会请求 www.v2ex.com与 Twitter旗下的 crashlytics.com并且，你可以下载源代码自行编译使用3. 为什么没有发帖与搜索这个软件最初的想法是提供一个在地铁上或空闲时阅读V2EX的选择，并不是要取代网站使用当然，最主要的原因..." }, { "title": "iOS RunLoop 学习 &amp;amp; 用RunLoop实现 当程序空闲时，执行某些代码", "url": "/2016/01/ios-runloop-xue-xi-and-yong-runloopshi-xian-dang-cheng-xu-kong-xian-shi-,zhi-xing-mou-xie-dai-ma/", "categories": "iOS, RunLoop", "tags": "", "date": "2016-01-06 15:33:25 +0800", "snippet": "学习是看这篇博客讲的还算清楚易懂和这篇博客类似的还有 孙源的线下iOS视频 RunLoop 篇。其实大致是一样的看博文 看视频两个选一个看看。。我是两个都看了这里我主要是分享一点用例，教程中提到的 AFNetworking 使用RunLoop代码主要功能是让线程常驻，当有任务时，丢给这个线程就行。主要是让 runLoop addPort .然后runLoop 就会一直 Waiting 。直到有任务丢给这个线程，执行完后任务后 ，又回到Waiting 状态这里我自己写了一个RunLoop用法例子，具体是 当程序空闲时，我们去执行一些代码。可能场景是某个tableView停止滑动后 ，AP..." }, { "title": "NSURLSession 学习笔记", "url": "/2015/11/nsurlsession-xue-xi-bi-ji/", "categories": "iOS, NSURLSession", "tags": "", "date": "2015-11-14 14:25:59 +0800", "snippet": "NSURLSession NSURLSession是iOS7中新的网络接口。程序在前台时，NSURLSession与NSURLConnection可以互相替代工作。功能 通过URL将数据下载到内存 通过URL将数据下载到文件系统 将数据上传到指定URL 在后台完成上述功能可设置的工作模式 默认会话模式（default）：工作模式类似于原来的NSURLConnection，使用的是基于磁盘缓存的持久化策略，使用用户keychain中保存的证书进行认证授权。 瞬时会话模式（ephemeral）：该模式不使用磁盘保存任何数据。所有和会话相关的caches，证书..." } ]
